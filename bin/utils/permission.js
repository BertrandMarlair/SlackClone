"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.requireAdmin=exports.requireDirectMessageAccess=exports.requireTeamAccess=exports.requireAuth=void 0;const createResolver=resolver=>{const baseResolver=resolver;baseResolver.createResolver=childResolver=>{const newResolver=async(parent,args,context,info)=>{await resolver(parent,args,context,info);return childResolver(parent,args,context,info);};return createResolver(newResolver);};return baseResolver;};const requireAuth=createResolver((parent,args,{user})=>{if(!user||!user.id){throw new Error("Not authenticated");}});exports.requireAuth=requireAuth;const requireTeamAccess=createResolver(async(parent,{channelId},{user,models})=>{if(!user||!user.id){throw new Error("Not authenticated");}const channel=await models.Channel.findOne({where:{id:channelId}});const member=await models.Member.findOne({where:{teamId:channel.teamId,userId:user.id}});if(!member){throw new Error("You have to be a memeber to the team for get the messages");}});exports.requireTeamAccess=requireTeamAccess;const requireDirectMessageAccess=createResolver(async(parent,{teamId,userId},{user,models})=>{if(!user||!user.id){throw new Error("Not authenticated");}const{or}=models.Sequelize.Op;const members=await models.Member.findAll({where:{teamId,[or]:[{userId:user.id},{userId}]}});if(members.length!==2){throw new Error("You have to be a memeber to the team for get the messages");}});exports.requireDirectMessageAccess=requireDirectMessageAccess;const requireAdmin=requireAuth.createResolver((parent,args,{user})=>{if(!user.isAdmin){throw new Error("Requires admin access");}});exports.requireAdmin=requireAdmin;
//# sourceMappingURL=permission.js.map