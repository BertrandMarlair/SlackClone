"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.tryLogin=exports.refreshTokens=exports.createTokens=void 0;var _jsonwebtoken=_interopRequireDefault(require("jsonwebtoken"));var _lodash=_interopRequireDefault(require("lodash"));var _bcrypt=_interopRequireDefault(require("bcrypt"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const createTokens=async(user,secret,secret2)=>{const createToken=_jsonwebtoken.default.sign({user:_lodash.default.pick(user,['id','isAdmin','username'])},secret,{expiresIn:'1h'});const createRefreshToken=_jsonwebtoken.default.sign({user:_lodash.default.pick(user,'id')},secret2,{expiresIn:'7d'});return[createToken,createRefreshToken];};exports.createTokens=createTokens;const refreshTokens=async(token,refreshToken,models,SECRET,SECRET2)=>{let userId=0;try{const{user:{id}}=_jsonwebtoken.default.decode(refreshToken);userId=id;}catch(err){return{};}if(!userId){return{};}const user=await models.User.findOne({where:{id:userId},raw:true});if(!user){return{};}const refreshSecret=`${user.password}${SECRET2}`;const refreshTokenWithoutBearer=refreshToken.replace("Bearer ","");try{_jsonwebtoken.default.verify(refreshTokenWithoutBearer,refreshSecret);}catch(err){return{};}const[newToken,newRefreshToken]=await createTokens(user,SECRET,refreshSecret);return{token:newToken,refreshToken:newRefreshToken,user};};exports.refreshTokens=refreshTokens;const tryLogin=async(email,password,models,SECRET,SECRET2)=>{const user=await models.User.findOne({where:{email},raw:true});if(!user){return{ok:false,errors:[{path:'email',message:'Wrong email'}]};}const valid=await _bcrypt.default.compare(password,user.password);if(!valid){return{ok:false,errors:[{path:'password',message:'Wrong password'}]};}const refreshTokenSecret=user.password+SECRET2;const[token,refreshToken]=await createTokens(user,SECRET,refreshTokenSecret);return{ok:true,token,refreshToken};};exports.tryLogin=tryLogin;
//# sourceMappingURL=auth.js.map