{"version":3,"sources":["../../src/utils/pubsub.js"],"names":["REDIS_HOST","REDIS_PORT","process","env","pubsub","RedisPubSub","connection","host","port","retry_strategy","attempt","Math","max","generateSubscribtionForEvent","events","subscribe","asyncIterator"],"mappings":"kIAAA,sEAEA,KAAM,CAACA,UAAD,CAAaC,UAAb,EAA2BC,OAAO,CAACC,GAAzC,CAEA,KAAMC,CAAAA,MAAM,CAAG,GAAIC,uCAAJ,CAAgB,CAC3BC,UAAU,CAAE,CACRC,IAAI,CAAEP,UADE,CAERQ,IAAI,CAAEP,UAFE,CAGRQ,cAAc,CAAC,CAACC,OAAD,CAAD,CAAY,CACtB,MAAOC,CAAAA,IAAI,CAACC,GAAL,CAASF,OAAO,CAAG,GAAnB,CAAwB,IAAxB,CAAP,CACH,CALO,CADe,CAAhB,CAAf,C,aAUeN,M,0BAER,KAAMS,CAAAA,4BAA4B,CAAG,CAAC,GAAGC,MAAJ,IAAgB,CACxDC,SAAS,CAAE,IAAMX,MAAM,CAACY,aAAP,CAAqBF,MAArB,CADuC,CAAhB,CAArC,C","sourcesContent":["import {RedisPubSub} from \"graphql-redis-subscriptions\";\n\nconst {REDIS_HOST, REDIS_PORT} = process.env;\n\nconst pubsub = new RedisPubSub({\n    connection: {\n        host: REDIS_HOST,\n        port: REDIS_PORT,\n        retry_strategy({attempt}) {\n            return Math.max(attempt * 100, 3000);\n        },\n    },\n});\n\nexport default pubsub;\n\nexport const generateSubscribtionForEvent = (...events) => ({\n    subscribe: () => pubsub.asyncIterator(events),\n});\n"],"file":"pubsub.js"}