{"version":3,"sources":["../../../../../src/schema/models/channel/sequelize/index.js"],"names":["sequelize","DataTypes","Channel","define","name","type","STRING","validate","isAlphanumeric","args","msg","len","public","BOOLEAN","defaultValue","associate","models","belongsTo","Team","foreignKey","field","belongsToMany","User","through"],"mappings":"0GAAe,CAACA,SAAD,CAAYC,SAAZ,GAA0B,CACrC,KAAMC,CAAAA,OAAO,CAAGF,SAAS,CAACG,MAAV,CAAiB,SAAjB,CAA4B,CACxCC,IAAI,CAAE,CACFC,IAAI,CAAEJ,SAAS,CAACK,MADd,CAEFC,QAAQ,CAAE,CACNC,cAAc,CAAE,CACZC,IAAI,CAAE,IADM,CAEZC,GAAG,CACC,8DAHQ,CADV,CAMNC,GAAG,CAAE,CACDF,IAAI,CAAE,CAAC,CAAD,CAAI,EAAJ,CADL,CAEDC,GAAG,CACC,sEAHH,CANC,CAFR,CADkC,CAgBxCE,MAAM,CAAE,CACJP,IAAI,CAAEJ,SAAS,CAACY,OADZ,CAEJC,YAAY,CAAE,IAFV,CAhBgC,CAA5B,CAAhB,CAsBAZ,OAAO,CAACa,SAAR,CAAoBC,MAAM,EAAI,CAE1Bd,OAAO,CAACe,SAAR,CAAkBD,MAAM,CAACE,IAAzB,CAA+B,CAC3BC,UAAU,CAAE,CACRf,IAAI,CAAE,QADE,CAERgB,KAAK,CAAE,SAFC,CADe,CAA/B,EAOAlB,OAAO,CAACmB,aAAR,CAAsBL,MAAM,CAACM,IAA7B,CAAmC,CAC/BC,OAAO,CAAE,gBADsB,CAE/BJ,UAAU,CAAE,CACRf,IAAI,CAAE,WADE,CAERgB,KAAK,CAAE,YAFC,CAFmB,CAAnC,EAOH,CAhBD,CAkBA,MAAOlB,CAAAA,OAAP,CACH,C","sourcesContent":["export default (sequelize, DataTypes) => {\n    const Channel = sequelize.define(\"channel\", {\n        name: {\n            type: DataTypes.STRING,\n            validate: {\n                isAlphanumeric: {\n                    args: true,\n                    msg:\n                        \"The name of the channel can only contain lettres ans numbers\",\n                },\n                len: {\n                    args: [3, 25],\n                    msg:\n                        \"The name of the channel needs to be between 3 and 25 characters long\",\n                },\n            },\n        },\n        public: {\n            type: DataTypes.BOOLEAN,\n            defaultValue: true,\n        },\n    });\n\n    Channel.associate = models => {\n        // 1:M\n        Channel.belongsTo(models.Team, {\n            foreignKey: {\n                name: \"teamId\",\n                field: \"team_id\",\n            },\n        });\n        // n:M\n        Channel.belongsToMany(models.User, {\n            through: \"channel_member\",\n            foreignKey: {\n                name: \"channelId\",\n                field: \"channel_id\",\n            },\n        });\n    };\n\n    return Channel;\n};\n"],"file":"index.js"}