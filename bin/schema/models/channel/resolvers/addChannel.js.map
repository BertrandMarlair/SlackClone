{"version":3,"sources":["../../../../../src/schema/models/channel/resolvers/addChannel.js"],"names":["requireAuth","createResolver","parent","args","models","user","member","Member","findOne","where","teamId","userId","id","raw","admin","ok","errors","path","message","channel","Channel","create","err","log","error"],"mappings":"6FAAA,wEACA,oFACA,wD,gGAEeA,wBAAYC,cAAZ,CACX,MAAOC,MAAP,CAAeC,IAAf,CAAqB,CAACC,MAAD,CAASC,IAAT,CAArB,GAAwC,CACpC,GAAI,CACA,KAAMC,CAAAA,MAAM,CAAG,KAAMF,CAAAA,MAAM,CAACG,MAAP,CAAcC,OAAd,CAAsB,CACvCC,KAAK,CAAE,CACHC,MAAM,CAAEP,IAAI,CAACO,MADV,CAEHC,MAAM,CAAEN,IAAI,CAACO,EAFV,CADgC,CAKvCC,GAAG,CAAE,IALkC,CAAtB,CAArB,CAQA,GAAI,CAACP,MAAM,CAACQ,KAAZ,CAAmB,CACf,MAAO,CACHC,EAAE,CAAE,KADD,CAEHC,MAAM,CAAE,CACJ,CACIC,IAAI,CAAE,MADV,CAEIC,OAAO,CACH,qDAHR,CADI,CAFL,CAAP,CAUH,CACD,KAAMC,CAAAA,OAAO,CAAG,KAAMf,CAAAA,MAAM,CAACgB,OAAP,CAAeC,MAAf,CAAsBlB,IAAtB,CAAtB,CAEA,MAAO,CACHY,EAAE,CAAE,IADD,CAEHI,OAFG,CAAP,CAIH,CAAC,MAAOG,GAAP,CAAY,CACVC,gBAAIC,KAAJ,CAAUF,GAAV,EACA,MAAO,CACHP,EAAE,CAAE,KADD,CAEHC,MAAM,CAAE,0BAAaM,GAAb,CAAkBlB,MAAlB,CAFL,CAAP,CAIH,CACJ,CApCU,C","sourcesContent":["import log from \"../../../../utils/logger\";\nimport formatErrors from \"../../../../utils/formatErrors\";\nimport {requireAuth} from \"../../../../utils/permission\";\n\nexport default requireAuth.createResolver(\n    async (parent, args, {models, user}) => {\n        try {\n            const member = await models.Member.findOne({\n                where: {\n                    teamId: args.teamId,\n                    userId: user.id,\n                },\n                raw: true,\n            });\n\n            if (!member.admin) {\n                return {\n                    ok: false,\n                    errors: [\n                        {\n                            path: \"name\",\n                            message:\n                                \"You have to be owner of the team for create channel\",\n                        },\n                    ],\n                };\n            }\n            const channel = await models.Channel.create(args);\n\n            return {\n                ok: true,\n                channel,\n            };\n        } catch (err) {\n            log.error(err);\n            return {\n                ok: false,\n                errors: formatErrors(err, models),\n            };\n        }\n    },\n);\n"],"file":"addChannel.js"}