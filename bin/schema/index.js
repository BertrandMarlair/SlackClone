"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.resolvers=exports.typeDefs=exports.default=void 0;var _sequelize=_interopRequireDefault(require("sequelize"));var _logger=_interopRequireDefault(require("../utils/logger"));var _utils=require("./utils");var channel=_interopRequireWildcard(require("./models/channel/index"));var message=_interopRequireWildcard(require("./models/message/index"));var user=_interopRequireWildcard(require("./models/user/index"));var team=_interopRequireWildcard(require("./models/team/index"));var directMessage=_interopRequireWildcard(require("./models/directMessage/index"));var commons=_interopRequireWildcard(require("./commons/index"));function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}}newObj.default=obj;return newObj;}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const sleep=ms=>new Promise(resolve=>setTimeout(resolve,ms));const Op=_sequelize.default.Op;const operatorsAliases={$eq:Op.eq,$ne:Op.ne,$gte:Op.gte,$gt:Op.gt,$lte:Op.lte,$lt:Op.lt,$not:Op.not,$in:Op.in,$notIn:Op.notIn,$is:Op.is,$like:Op.like,$notLike:Op.notLike,$iLike:Op.iLike,$notILike:Op.notILike,$regexp:Op.regexp,$notRegexp:Op.notRegexp,$iRegexp:Op.iRegexp,$notIRegexp:Op.notIRegexp,$between:Op.between,$notBetween:Op.notBetween,$overlap:Op.overlap,$contains:Op.contains,$contained:Op.contained,$adjacent:Op.adjacent,$strictLeft:Op.strictLeft,$strictRight:Op.strictRight,$noExtendRight:Op.noExtendRight,$noExtendLeft:Op.noExtendLeft,$and:Op.and,$or:Op.or,$any:Op.any,$all:Op.all,$values:Op.values,$col:Op.col};var _default=async()=>{let maxReconnect=20,connected=false;const sequelize=new _sequelize.default("slack","postgres","postgres",{dialect:"postgres",operatorsAliases,host:process.env.DB_HOST||"localhost",define:{underscored:true}});while(!connected&&maxReconnect){try{await sequelize.authenticate();connected=true;}catch(err){_logger.default.error("reconnecting in 5 seconds");maxReconnect--;await sleep(5000);}}if(!connected){return null;}const models={User:sequelize.import("./models/user/sequelize/index"),Channel:sequelize.import("./models/channel/sequelize/index"),Message:sequelize.import("./models/message/sequelize/index"),Team:sequelize.import("./models/team/sequelize/index"),Member:sequelize.import("./models/member/sequelize/index"),DirectMessage:sequelize.import("./models/directMessage/sequelize/index")};Object.keys(models).forEach(modelName=>{if("associate"in models[modelName]){models[modelName].associate(models);}});models.sequelize=sequelize;models.Sequelize=_sequelize.default;return models;};exports.default=_default;const structures=[channel,message,user,team,directMessage,commons];const typeDefs=(0,_utils.generateTypeDefs)(structures);exports.typeDefs=typeDefs;const resolvers=(0,_utils.generateResolvers)(structures);exports.resolvers=resolvers;
//# sourceMappingURL=index.js.map